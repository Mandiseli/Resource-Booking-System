// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ResourceBookingSystem.Models;

#nullable disable

namespace ResourceBookingSystem.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250715020540_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ResourceBookingSystem.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("BookedBy")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Purpose")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ResourceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ResourceId");

                    b.ToTable("Bookings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookedBy = "Alice",
                            EndTime = new DateTime(2025, 7, 15, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Purpose = "Morning Standup",
                            ResourceId = 1,
                            StartTime = new DateTime(2025, 7, 15, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            BookedBy = "Bob",
                            EndTime = new DateTime(2025, 7, 16, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            Purpose = "Client Visit",
                            ResourceId = 2,
                            StartTime = new DateTime(2025, 7, 16, 14, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ResourceBookingSystem.Models.Resource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Location")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Resources");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacity = 10,
                            Description = "Large meeting room with projector",
                            IsAvailable = true,
                            Location = "3rd Floor",
                            Name = "Meeting Room A"
                        },
                        new
                        {
                            Id = 2,
                            Capacity = 5,
                            Description = "Toyota Corolla",
                            IsAvailable = true,
                            Location = "Parking Bay 1",
                            Name = "Company Car 1"
                        });
                });

            modelBuilder.Entity("ResourceBookingSystem.Models.Booking", b =>
                {
                    b.HasOne("ResourceBookingSystem.Models.Resource", "Resource")
                        .WithMany("Bookings")
                        .HasForeignKey("ResourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Resource");
                });

            modelBuilder.Entity("ResourceBookingSystem.Models.Resource", b =>
                {
                    b.Navigation("Bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
